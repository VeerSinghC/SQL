-- Drop tables if they already exist to avoid duplication errors
DROP TABLE IF EXISTS ORDERS;
DROP TABLE IF EXISTS CUSTOMERS;
DROP TABLE IF EXISTS SALESMEN;

-- Create SALESMEN table
CREATE TABLE IF NOT EXISTS SALESMEN(
    SALESMEN_ID TEXT PRIMARY KEY,
    NAME TEXT,
    CITY TEXT,
    COMMISION REAL
);

-- Insert data into SALESMEN
INSERT INTO SALESMEN (SALESMEN_ID, NAME, CITY, COMMISION) VALUES
('S001', 'John Doe', 'New York', 0.15),
('S002', 'Jane Smith', 'Los Angeles', 0.13),
('S003', 'Emily Johnson', 'Chicago', 0.14),
('S004', 'Michael Brown', 'Houston', 0.12);

-- Create CUSTOMERS table
CREATE TABLE IF NOT EXISTS CUSTOMERS(
    CUSTOMER_ID TEXT PRIMARY KEY,
    CUST_NAME TEXT,
    CITY TEXT,
    GRADE INTEGER,
    SALESMEN_ID TEXT
);

-- Insert data into CUSTOMERS
INSERT INTO CUSTOMERS (CUSTOMER_ID, CUST_NAME, CITY, GRADE, SALESMEN_ID) VALUES
('C001', 'Alice Williams', 'New York', 200, 'S001'),
('C002', 'Bob Brown', 'Los Angeles', 150, 'S002'),
('C003', 'Charlie Davis', 'Chicago', 250, 'S003'),
('C004', 'Diana Evans', 'Houston', 100, 'S004');

-- Create ORDERS table
CREATE TABLE IF NOT EXISTS ORDERS(
    ORD_NO TEXT PRIMARY KEY,
    PURCH_AMT REAL,
    ORD_DATE TEXT,
    CUSTOMER_ID TEXT,
    SALESMEN_ID TEXT
);

-- Insert data into ORDERS
INSERT INTO ORDERS (ORD_NO, PURCH_AMT, ORD_DATE, CUSTOMER_ID, SALESMEN_ID) VALUES
('O001', 1000, '2023-01-15', 'C001', 'S001'),
('O002', 1500, '2023-02-20', 'C002', 'S002'),
('O003', 1200, '2023-03-10', 'C003', 'S003'),
('O004', 800, '2023-04-05', 'C004', 'S004');

-- Query 1: Customer name with their Salesman name
SELECT CUSTOMERS.CUST_NAME, SALESMEN.NAME
FROM CUSTOMERS
JOIN SALESMEN ON CUSTOMERS.SALESMEN_ID = SALESMEN.SALESMEN_ID;

-- Query 2: Orders where Customer and Salesman are from different cities
SELECT ORDERS.ORD_NO, CUSTOMERS.CUST_NAME, ORDERS.CUSTOMER_ID, ORDERS.SALESMEN_ID
FROM ORDERS 
JOIN CUSTOMERS ON ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
JOIN SALESMEN ON ORDERS.SALESMEN_ID = SALESMEN.SALESMEN_ID
WHERE CUSTOMERS.CITY <> SALESMEN.CITY;

-- Query 3: Order numbers with Customer names
SELECT ORDERS.ORD_NO, CUSTOMERS.CUST_NAME
FROM ORDERS
JOIN CUSTOMERS ON ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID;

-- Query 4: Customers and their grades (only if grade is not null)
SELECT CUSTOMERS.CUST_NAME AS "CUSTOMER", CUSTOMERS.GRADE AS "GRADE"
FROM ORDERS
JOIN SALESMEN ON ORDERS.SALESMEN_ID = SALESMEN.SALESMEN_ID
JOIN CUSTOMERS ON ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
WHERE CUSTOMERS.GRADE IS NOT NULL;

-- Query 5: Commission amount for orders by customers with grade >= 200
SELECT 
    ORDERS.ORD_NO, 
    CUSTOMERS.CUST_NAME, 
    SALESMEN.COMMISION AS "COMMISSION%",
    ORDERS.PURCH_AMT * SALESMEN.COMMISION AS "COMMISSION"
FROM ORDERS
JOIN CUSTOMERS ON ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
JOIN SALESMEN ON ORDERS.SALESMEN_ID = SALESMEN.SALESMEN_ID
WHERE CUSTOMERS.GRADE >= 200;

-- Query 6: Orders placed on '2023-01-15'
SELECT * 
FROM CUSTOMERS
JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
WHERE ORDERS.ORD_DATE = '2023-01-15';